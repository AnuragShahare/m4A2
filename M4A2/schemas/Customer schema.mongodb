Skip to content
Search or jump toâ€¦
Pull requests
Issues
Marketplace
Explore
 
@AnuragShahare 
AnuragShahare
/
M4A1-Setting-up-MongoDB-in-Cloud-
Public
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
M4A1-Setting-up-MongoDB-in-Cloud-/Module 4 Assignment 01-Connecting2MongoDB - StarterPack/schemas/insert.mongodb
@AnuragShahare
AnuragShahare Add files via upload
Latest commit 29857bb 15 days ago
 History
 1 contributor
48 lines (41 sloc)  2.75 KB

// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('LoansDB');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.sales.drop();

// Insert a few documents into the sales collection.
db.loan.insertMany([
  {  'customername': 'EVA', 'phoneNumber': 842588,
   'address': 'Mesa','loanAmount':220000 , 'intrest':4.5, 
   'loanTermYears': 9, 'loanType': 'Personal Loan', 
   'description': 'Eva has taken a Personal loan', 
   'createdDate': new Date('2016-03-01T08:00:00Z'), 
   'insertedDate': new Date(new Date().getTime()-(24*60*60-1000)) },
{  'customername': 'Adam', 'phoneNumber': 787913, 'address': 'Florida','loanAmount':11400 , 'intrest':6, 'loanTermYears': 5, 'loanType': 'Education Loan', 'description': 'Allan has taken Education loan', 
'createdDate': new Date('2015-03-01T08:00:00Z'), 'insertedDate': new Date(new Date().getTime()-(24*60*60-1000)) },
  {  'customername': 'abc', 'phoneNumber': 7841777,
   'address': 'Mesa','loanAmount':25000 , 'intrest':4.5, 
   'loanTermYears': 9, 'loanType': 'Car Loan', 
   'description': 'Car loan', 
   'createdDate': new Date('2014-03-01T08:00:00Z'), 
   'insertedDate': new Date(new Date().getTime()-(24*60*60-1000)) },
{  'customername': 'Allan', 'phoneNumber': 787913, 'address': 'Tempe','loanAmount':15000 , 'intrest':9, 'loanTermYears': 5, 'loanType': 'Education Loan', 'description': 'Allan has taken Education loan', 
'createdDate': new Date('2014-03-01T08:00:00Z'), 'insertedDate': new Date(new Date().getTime()-(24*60*60-1000)) },
{ 'customername': 'Minda', 'phoneNumber': 81886, 'address': 'Phoenix','loanAmount':5000 , 'intrest':2.1, 'loanTermYears': 3, 'loanType': 'home Loan', 'description': 'Minda has taken loan', 
'createdDate': new Date('2014-03-01T08:00:00Z'), 'insertedDate': new Date(new Date().getTime()-(24*60*60-1000)) },
]);

 
// Run a find command to view items sold on April 4th, 2014.
db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// Build an aggregation to view total sales for each product in 2014.
const aggregation = [
  { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
  { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
];

// Run the aggregation and open a cursor to the results.
// Use toArray() to exhaust the cursor to return the whole result set.
// You can use hasNext()/next() to iterate through the cursor page by page.
